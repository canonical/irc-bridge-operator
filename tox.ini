# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit, static, coverage-report

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
docs_path = {toxinidir}/docs
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    codespell
    flake8
    flake8-builtins
    flake8-copyright<6.0.0
    flake8-docstrings>=1.6.0
    flake8-docstrings-complete>=1.0.3
    flake8-test-docs>=1.0
    isort
    mypy
    pep8-naming
    pydocstyle>=2.10
    pylint
    pyproject-flake8
    pytest
    pytest-asyncio
    pytest-operator
    requests
    types-PyYAML
    types-requests
    -r{toxinidir}/requirements.txt
commands =
    pydocstyle {[vars]src_path}
    # uncomment the following line if this charm owns a lib
    codespell {[vars]lib_path}
    codespell {toxinidir} --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}
    mypy {[vars]all_path}
    pylint {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    coverage[toml]
    pytest
    pytest-mock
    ops[testing]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path},{[vars]lib_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    coverage report

[testenv:coverage-report]
description = Create test coverage report
deps =
    coverage[toml]
    pytest
    -r{toxinidir}/requirements.txt
commands =
    coverage report

[testenv:static]
description = Run static analysis tests
deps =
    bandit[toml]
    -r{toxinidir}/requirements.txt
commands =
    bandit -c {toxinidir}/pyproject.toml -r {[vars]src_path} {[vars]tst_path}

[testenv:integration]
description = Run integration tests
deps =
    -r{toxinidir}/requirements.txt
    allure-pytest>=2.8.18
    git+https://github.com/canonical/data-platform-workflows@v24.0.0\#subdirectory=python/pytest_plugins/allure_pytest_collection_report
    juju
    pytest
    pytest-asyncio
    pytest-operator
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:lint-docs]
skip_install = true
allowlist_externals =
    curl
    tar
    chmod
    echo
    sh
    {envtmpdir}/lychee
setenv =
    LYCHEE_VERSION = 0.19.1
    EXPECTED_SHA256 = 537bcfbb0f3bf997f4cbdab259cc5500f2804b69614140ac3edebb4de94b3574
    DOWNLOAD_URL = https://github.com/lycheeverse/lychee/releases/download/lychee-v{env:LYCHEE_VERSION}/lychee-x86_64-unknown-linux-gnu.tar.gz
commands_pre =
    echo "Download URL: {env:DOWNLOAD_URL}"
    curl -L {env:DOWNLOAD_URL} -o {envtmpdir}/lychee.tar.gz
    sh -c "echo '{env:EXPECTED_SHA256}  {envtmpdir}/lychee.tar.gz' | sha256sum -c -"
    tar -xzf {envtmpdir}/lychee.tar.gz -C {envtmpdir}
    chmod +x {envtmpdir}/lychee
commands =
    {envtmpdir}/lychee --max-concurrency 2 README.md {[vars]docs_path}

[testenv:src-docs]
allowlist_externals=sh
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
description = Generate documentation for src
deps =
    lazydocs
    -r{toxinidir}/requirements.txt
commands =
    ; can't run lazydocs directly due to needing to run it on src/* which produces an invocation error in tox
    sh generate-src-docs.sh
